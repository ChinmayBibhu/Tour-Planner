import _typeof from "@babel/runtime/helpers/esm/typeof";
var allowedPlaces = ['endOfHead', 'endOfBody'];

function isAllowedStyle(reactEl) {
  return typeof reactEl.props.children === 'string' && reactEl.props.children.trim().length > 0;
}

function isAllowedScript(reactEl) {
  return typeof reactEl.props.children === 'string' && reactEl.props.children.trim().length > 0 || typeof reactEl.props.src === 'string' && reactEl.props.src.trim().length > 0;
}

var allowedTags = {
  script: isAllowedScript,
  style: isAllowedStyle,
  meta: function meta() {
    return true;
  },
  link: function link() {
    return true;
  }
};
export default function isAllowed(reactEl) {
  return _typeof(reactEl) === 'object' && reactEl !== null && allowedTags[reactEl.type] && allowedPlaces.includes(reactEl.props.place) && typeof reactEl.props.rawKey === 'string' && reactEl.props.rawKey.length > 0 && allowedTags[reactEl.type](reactEl);
}