"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _index = require("./index");

var _components = require("@quarkly/components");

var _getQAPI = _interopRequireDefault(require("../utils/getQAPI"));

var overrides = {
  Cell: {
    kind: 'Box',
    props: {}
  }
};
var ordinalIndicators = {
  1: 'st',
  2: 'nd',
  3: 'rd'
};

var StructureContent = function StructureContent(_ref) {
  var iw = _ref.iw,
      imaxw = _ref.imaxw,
      iminw = _ref.iminw,
      cellsTotal = _ref.cellsTotal,
      cellsGroup = _ref.cellsGroup,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["iw", "imaxw", "iminw", "cellsTotal", "cellsGroup"]);
  var devMode = (0, _react.useMemo)(function () {
    return (0, _getQAPI["default"])().mode === 'development';
  }, []);

  var _useOverrides = (0, _components.useOverrides)(props, overrides),
      override = _useOverrides.override,
      children = _useOverrides.children,
      rest = _useOverrides.rest,
      ChildPlaceholder = _useOverrides.ChildPlaceholder;

  var getOrdinalNumber = (0, _react.useCallback)(function (index) {
    var numb = Math.abs(index % cellsGroup);
    return numb + (ordinalIndicators[numb] || 'th');
  }, [cellsGroup]);
  return _react["default"].createElement(_index.Box, (0, _extends2["default"])({
    width: iw,
    "max-width": imaxw,
    "min-width": iminw,
    "min-height": "16px",
    margin: "0 auto",
    "grid-template-columns": "repeat(".concat(cellsTotal, ", 1fr)"),
    "grid-template-rows": "minmax(min-content, max-content)",
    "grid-auto-rows": "minmax(min-content, max-content)",
    "grid-gap": "16px",
    display: "grid",
    "data-qkind": "StructureContent"
  }, rest), Array(cellsTotal).fill().map(function (__, index) {
    return _react["default"].createElement(_index.Box, (0, _extends2["default"])({
      key: "cell-".concat(index)
    }, override('Cell', "Cell ".concat(getOrdinalNumber(index)), "Cell ".concat(index), {
      defaultKey: "Cell ".concat(getOrdinalNumber(index))
    })), _react["default"].createElement(ChildPlaceholder, {
      slot: "cell-".concat(index)
    }), devMode && !override("cell-".concat(index)).children && _react["default"].createElement(_index.Placeholder, {
      message: "DROP HERE"
    }));
  }), children);
};

var effects = {
  hover: ':hover'
};
Object.assign(StructureContent, {
  effects: effects,
  overrides: overrides
});
var _default = StructureContent;
exports["default"] = _default;