import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { forwardRef } from 'react';
import { genericHashLink, HashLink } from 'react-router-hash-link';
import GatsbyLink from 'gatsby-link';

var GatsbyHashLink = function GatsbyHashLink(props) {
  return genericHashLink(props, GatsbyLink);
};

var getQAPI = function getQAPI() {
  var globalThis = null;

  if (typeof window !== 'undefined') {
    globalThis = window;
  } else if (typeof global !== 'undefined') {
    globalThis = global;
  } else {
    return {};
  }

  if (!globalThis.QAPI) {
    return {};
  }

  return globalThis.QAPI;
};

var isAbsoluteURL = function isAbsoluteURL(url) {
  if (typeof url !== 'string') {
    return false;
  } // Don't match Windows paths `c:\`


  if (/^[a-zA-Z]:\\/.test(url)) {
    return false;
  } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
  // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3


  return /^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(url);
};

export var AbstractLink = forwardRef(function (props, ref) {
  var _props$href = props.href,
      href = _props$href === void 0 ? '' : _props$href,
      children = props.children,
      rest = _objectWithoutProperties(props, ["href", "children"]);

  var _getQAPI = getQAPI(),
      projectType = _getQAPI.projectType,
      mode = _getQAPI.mode;

  var Link = projectType === 'gatsby' ? GatsbyHashLink : HashLink;

  if (mode !== 'development' && isAbsoluteURL(href)) {
    return React.createElement("a", _extends({
      href: href,
      ref: ref
    }, rest), children);
  }

  return React.createElement(Link, _extends({
    to: href,
    ref: ref
  }, rest), children);
});