import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import atomize from '@quarkly/atomize';
import { commonProps, pointerEventsCategoryBase, pointerEventsCategoryBaseDefaults } from './common-props';
export default atomize.hr({
  name: 'Hr',
  normalize: true,
  mixins: true,
  description: {
    en: 'hr element — horizontal line to separate content',
    ru: 'Элемент hr — разделительная линия'
  },
  propInfo: _objectSpread({}, commonProps, {}, pointerEventsCategoryBase)
}, _objectSpread({
  'margin-top': '16px',
  'margin-bottom': '16px',
  'padding-bottom': '4px',
  'border-width': '1px 0 0 0',
  'border-style': 'solid',
  'border-color': '--color-lightD2'
}, pointerEventsCategoryBaseDefaults));