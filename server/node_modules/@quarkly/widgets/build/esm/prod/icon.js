import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import atomize from '@quarkly/atomize';
var Wrapper = atomize.div({
  effects: {
    hover: ':hover',
    firstChild: ':first-child',
    lastChild: ':last-child',
    onlyChild: ':only-child',
    firstOfType: ':first-of-type',
    lastOfType: ':last-of-type',
    onlyOfType: ':only-of-type',
    before: ':before',
    after: ':after',
    empty: ':empty'
  }
}, {
  display: 'flex',
  'align-items': 'center',
  'justify-content': 'center'
});

var empty = function empty() {
  return null;
};

var Icon = function Icon(_ref) {
  var icon = _ref.icon,
      size = _ref.size,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? '1em' : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? '1em' : _ref$height,
      children = _ref.children,
      defaultIcon = _ref.defaultIcon,
      rest = _objectWithoutProperties(_ref, ["icon", "size", "width", "height", "children", "defaultIcon"]);

  var Icon = typeof icon === 'function' ? icon : defaultIcon || empty;
  return React.createElement(Wrapper, _extends({}, rest, {
    "font-size": size,
    width: width,
    height: height
  }), React.createElement(Icon, {
    className: "icon"
  }));
};

Icon.defaultProps = {
  size: '24px'
};
export default Icon;