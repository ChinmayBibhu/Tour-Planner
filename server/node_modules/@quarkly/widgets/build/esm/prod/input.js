import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import atomize from '@quarkly/atomize';
import { commonProps, pointerEventsCategoryBase, pointerEventsCategoryBaseDefaults } from './common-props';
export default atomize.input({
  name: 'Input',
  description: {
    en: 'Input element',
    ru: 'Input element'
  },
  effects: {
    hover: ':hover',
    focus: ':focus',
    required: ':required',
    placeholder: '::placeholder',
    invalid: ':invalid',
    disabled: ':disabled',
    firstChild: ':first-child',
    lastChild: ':last-child',
    onlyChild: ':only-child',
    firstOfType: ':first-of-type',
    lastOfType: ':last-of-type',
    onlyOfType: ':only-of-type'
  },
  propInfo: _objectSpread({
    name: {
      control: 'input',
      category: 'Main'
    },
    type: {
      control: 'select',
      variants: ['text', 'email', 'password', 'tel', 'date', 'number', 'search', 'file', 'hidden'],
      category: 'Main'
    },
    placeholder: {
      control: 'input',
      category: 'Main'
    },
    defaultValue: {
      control: 'input',
      category: 'Main'
    },
    required: {
      control: 'checkbox',
      category: 'Main'
    },
    disabled: {
      control: 'checkbox',
      category: 'Main'
    },
    as: {
      control: 'select',
      variants: ['input', 'textarea'],
      category: 'Main'
    }
  }, commonProps, {}, pointerEventsCategoryBase)
}, _objectSpread({
  as: 'input',
  defaultValue: '',
  'focus-border-color': '--color-lightD1',
  'box-sizing': 'border-box',
  'border-width': '2px',
  'border-style': 'solid',
  'border-color': '--color-lightD2',
  'border-radius': '2px',
  'padding-top': '6px',
  'padding-bottom': '6px',
  'padding-left': '16px',
  'padding-right': '16px',
  font: '--base',
  color: '--dark',
  outline: 'none'
}, pointerEventsCategoryBaseDefaults));